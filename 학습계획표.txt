========================
학습 커리큘럼
========================

- 총 학습 기간: 약 4~6달
- 학습 시간: 5일, 하루 6~8시간씩 (주당 30~40시간)
- 학습 방법: 인프런 강의, 도서, 실습 위주, 매주 학습 복습
- 역량 평가: 학습 전과 후에 알고 있는 개념을 테스트를 통해
  평가한다
- 학습 평가: 끝날 때마다 자신이 학습 목표를 얼마나 달성을
  하였는가 이해도를 자가평가한다

========================
학습 목표
========================

* HTML & CSS (2주)
  - 목표: 웹 페이지의 구조와 스타일링을 이해하고, 
    포트폴리오 페이지를 구현한다
  - 학습 내용: 
    -- HTML 기초
    -- CSS 기초
    -- 반용형 웹 디자인
    -- 미니 프로젝트
  - 평가 방법: 포트폴리오 페이지 제작, 일관된 디자인 구현

* JavaScript (2주)
  - 목표: 기본 문법과 DOM 조작을 이해하고, 
    포트폴리오의 동적 요소를 구현한다
  - 학습 내용: 
    -- JavaScript 기초 문법
    -- 객체와 배열
    -- DOM 조작
    -- 비동기 프로그래밍
    -- 미니 프로젝트
  - 평가 방법: 포트폴리오에 동적인 요소를 추가 
    (예: 이미지 슬라이드, 모달 창)

* C# (2주)
  - 목표: 기본 문법과 객체 지향 프로그래밍 개념을 이해하고, 
    계산기 콘솔 애플리케이션을 구현한다
  - 학습 내용: 
    -- C# 기본 문법
    -- 객체 지행 프로그래밍
    -- 예외 처리
    -- 컬렉션과 제네릭
    -- 파일 입출력
    -- 미니 프로젝트
  - 평가 방법: 계산기 콘솔 애플리케이션에 다양한 연산 기능 구현

* Java (2주)
  - 목표: 기본 문법과 객체 지향 프로그래밍 개념을 이해하고, 
    메모장 애플리케이션을 구현한다
  - 학습 내용: J
    -- JAVA 기본 문법
    -- 객체 지향 프로그래밍
    -- 예외 처리
    -- 컬렉션과 제네릭
    -- 입출력, 멀티스레딩
    -- 미니 프로젝트
  - 평가 방법: 메모장 애플리케이션에 파일 저장/불러오기 기능 구현

* MySQL (4주)
  - 목표: SQL 기본 문법과 데이터베이스 개념을 이해하고, 
    학생 관리 시스템 데이터베이스를 설계하고 구현한다
  - 학습 내용: 
    -- 데이터베이스 기초
    -- MySQL 설치 및 설정
    -- SQL 기본 문법
    -- 데이터베이스 설계
    -- 고급 SQL
    -- 트랙잰션과 동시성 제어
    -- 백업과 복구, 
    -- 미니 프로젝트
  - 평가 방법: 학생 관리 시스템 데이터베이스 설계하고, 
    데이터 조작 및 조회 수행

* Spring Boot (2주)
  - 목표: 기본 구조와 기능을 이해하고, 클론 코딩으로 RESTful API를 구현한다
  - 학습 내용: 
    -- Spring Boot 소개
    -- 개발 환경 설정
    -- 애플리케이션 구조 이해
    -- RESTful 웹 서비스 개발
    -- 예외 처리
    -- 보안 설정
    -- 테스트와 배포
    -- 미니 프로젝트
  - 평가 방법: RESTful 웹 애플리케이션 클론 코딩을 구현하고 
    기능 작동 테스트

* ASP.NET Core (2주)
  - 목표: 기본 구조와 기능을 이해하고, 클론 코딩으로 
    MVC 패턴 기반 웹 애플리케이션을 개발한다
  - 학습 내용: 
    -- ASP.NET Core 소개
    -- 개발 환경 설정
    -- 애플리케이션 구조 이해
    -- MVC 채턴과 Razor Pages
    -- 데이터 접근과 Entity Framework Core
    -- RESTfull 웹 API 개발
    -- 보안과 인증
    -- 테스트와 배포
    -- 미니 프로젝트
  - 평가 방법: 웹 애플리케이션 클론 코딩을 구현하고 
    기능 작동 테스트

* 프로젝트 실습 (6주)
  - 목표: 학습한 기술과 지식을 종합하여 포트폴리오에 
    추가할 프로젝트를 개발한다
  - 학습 내용: 
    -- 프로젝트 기획 및 설계
    -- 개발 환경 구축
    -- 프론트엔드 개발
    -- 백엔드 개발
    -- 통합 및 테스트
    -- 배포 및 유지보수
    -- 프로젝트 문서화
  - 평가 방법: 모든 기능과 UI, 데이터 연동이 정상적으로 
    작동하는지 최종 점검

========================
역량 평가
========================

* 퀴즈와 테스트
  - 학습 전후 프로그래밍 언어별로 퀴즈나 테스트를 
    통해 지식 수준을 평가한다
    ex) 코딩 문제 사이트를 통해 예를 들어, '프로그래머스'에서 코딩 테스트를 통해 점검
    챗지피티를 통해 개념 이론 확인 문제를 제공받아 점검을 한다

* 알고 있는 개념 정리
  - 이미 알고 있는 개념을 정리해본다. 자신이 알고 있는 것과 
    모르고 있는 것을 파악 후 학습 방향 설정

========================
학습 평가
========================

* 학습 목표 확인
  - 설정한 학습 목표를 다시 확인한다
  - 목표 달성 여부를 평가하고, 달성하지 못한 
    부분이 있다면 그 원인을 분석한다

* 학습 내용 요약
  - 학습한 주요 내용을 간략하게 정리한다
  - 오늘 배운 것을 기록하고, 실제로 어떻게 적용했는지 작성한다

* 성과와 도전 과제 평가
  - 학습 과정에서 이해가 된 부분이나 쉬웠던 내용을 기록한다
  - 학습 중 겪은 어려움을 파악하고, 이를 어떻게 극복했는지 
    또는 어떻게 해결할지 작성한다

* 학습 방법 및 태도 점검
  - 학습에 사용한 공부 방법이 효과적이었는지 평가한다
  - 집중도, 시간 관리, 학습 환경 등 
    학습 태도를 점검하고 개선할 부분을 찾는다

* 피드백 수집 및 반영
  - 강사 또는 챗지피티로부터 받음 피드백이 있다면 정리한다
  - 피드백을 통해 개선해야 할 점과 강화해야 할 점을 파악하고, 
    다음 학습에 반영할 계획을 세운다

* 학습 계획 수립
  - 평가를 바탕으로 현실적이고 구체적인 다음날 학습 목표를 세운다
  - 목표 달성을 위해 세부 계획과 필요한 자원을 준비한다